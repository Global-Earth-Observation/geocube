// Code generated by "enumer -json -sql -type JobStatus"; DO NOT EDIT.

package geocube

import (
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"strings"
)

const _JobStatusName = "JobCreatedOrdersPreparedPrepareOrdersFailedSendOrdersFailedConsolidationDoneConsolidationFailedConsolidationRetryFailedConsolidationIndexedConsolidationIndexingFailedDatasetsSwappedSwapDatasetsFailedDeletionStartedStartDeletionFailedDeletionReadyDeletionNotReadyRemovalDoneDeletionDoneRemovalFailedDeletionFailedCancelledByUserCancelledByUserForcedCancellationFailedCancellationDoneRollbackFailedRollbackDoneRetriedRetryForcedContinue"

var _JobStatusIndex = [...]uint16{0, 10, 24, 43, 59, 76, 95, 119, 139, 166, 181, 199, 214, 233, 246, 262, 273, 285, 298, 312, 327, 348, 366, 382, 396, 408, 415, 426, 434}

const _JobStatusLowerName = "jobcreatedorderspreparedprepareordersfailedsendordersfailedconsolidationdoneconsolidationfailedconsolidationretryfailedconsolidationindexedconsolidationindexingfaileddatasetsswappedswapdatasetsfaileddeletionstartedstartdeletionfaileddeletionreadydeletionnotreadyremovaldonedeletiondoneremovalfaileddeletionfailedcancelledbyusercancelledbyuserforcedcancellationfailedcancellationdonerollbackfailedrollbackdoneretriedretryforcedcontinue"

func (i JobStatus) String() string {
	if i < 0 || i >= JobStatus(len(_JobStatusIndex)-1) {
		return fmt.Sprintf("JobStatus(%d)", i)
	}
	return _JobStatusName[_JobStatusIndex[i]:_JobStatusIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _JobStatusNoOp() {
	var x [1]struct{}
	_ = x[JobCreated-(0)]
	_ = x[OrdersPrepared-(1)]
	_ = x[PrepareOrdersFailed-(2)]
	_ = x[SendOrdersFailed-(3)]
	_ = x[ConsolidationDone-(4)]
	_ = x[ConsolidationFailed-(5)]
	_ = x[ConsolidationRetryFailed-(6)]
	_ = x[ConsolidationIndexed-(7)]
	_ = x[ConsolidationIndexingFailed-(8)]
	_ = x[DatasetsSwapped-(9)]
	_ = x[SwapDatasetsFailed-(10)]
	_ = x[DeletionStarted-(11)]
	_ = x[StartDeletionFailed-(12)]
	_ = x[DeletionReady-(13)]
	_ = x[DeletionNotReady-(14)]
	_ = x[RemovalDone-(15)]
	_ = x[DeletionDone-(16)]
	_ = x[RemovalFailed-(17)]
	_ = x[DeletionFailed-(18)]
	_ = x[CancelledByUser-(19)]
	_ = x[CancelledByUserForced-(20)]
	_ = x[CancellationFailed-(21)]
	_ = x[CancellationDone-(22)]
	_ = x[RollbackFailed-(23)]
	_ = x[RollbackDone-(24)]
	_ = x[Retried-(25)]
	_ = x[RetryForced-(26)]
	_ = x[Continue-(27)]
}

var _JobStatusValues = []JobStatus{JobCreated, OrdersPrepared, PrepareOrdersFailed, SendOrdersFailed, ConsolidationDone, ConsolidationFailed, ConsolidationRetryFailed, ConsolidationIndexed, ConsolidationIndexingFailed, DatasetsSwapped, SwapDatasetsFailed, DeletionStarted, StartDeletionFailed, DeletionReady, DeletionNotReady, RemovalDone, DeletionDone, RemovalFailed, DeletionFailed, CancelledByUser, CancelledByUserForced, CancellationFailed, CancellationDone, RollbackFailed, RollbackDone, Retried, RetryForced, Continue}

var _JobStatusNameToValueMap = map[string]JobStatus{
	_JobStatusName[0:10]:         JobCreated,
	_JobStatusLowerName[0:10]:    JobCreated,
	_JobStatusName[10:24]:        OrdersPrepared,
	_JobStatusLowerName[10:24]:   OrdersPrepared,
	_JobStatusName[24:43]:        PrepareOrdersFailed,
	_JobStatusLowerName[24:43]:   PrepareOrdersFailed,
	_JobStatusName[43:59]:        SendOrdersFailed,
	_JobStatusLowerName[43:59]:   SendOrdersFailed,
	_JobStatusName[59:76]:        ConsolidationDone,
	_JobStatusLowerName[59:76]:   ConsolidationDone,
	_JobStatusName[76:95]:        ConsolidationFailed,
	_JobStatusLowerName[76:95]:   ConsolidationFailed,
	_JobStatusName[95:119]:       ConsolidationRetryFailed,
	_JobStatusLowerName[95:119]:  ConsolidationRetryFailed,
	_JobStatusName[119:139]:      ConsolidationIndexed,
	_JobStatusLowerName[119:139]: ConsolidationIndexed,
	_JobStatusName[139:166]:      ConsolidationIndexingFailed,
	_JobStatusLowerName[139:166]: ConsolidationIndexingFailed,
	_JobStatusName[166:181]:      DatasetsSwapped,
	_JobStatusLowerName[166:181]: DatasetsSwapped,
	_JobStatusName[181:199]:      SwapDatasetsFailed,
	_JobStatusLowerName[181:199]: SwapDatasetsFailed,
	_JobStatusName[199:214]:      DeletionStarted,
	_JobStatusLowerName[199:214]: DeletionStarted,
	_JobStatusName[214:233]:      StartDeletionFailed,
	_JobStatusLowerName[214:233]: StartDeletionFailed,
	_JobStatusName[233:246]:      DeletionReady,
	_JobStatusLowerName[233:246]: DeletionReady,
	_JobStatusName[246:262]:      DeletionNotReady,
	_JobStatusLowerName[246:262]: DeletionNotReady,
	_JobStatusName[262:273]:      RemovalDone,
	_JobStatusLowerName[262:273]: RemovalDone,
	_JobStatusName[273:285]:      DeletionDone,
	_JobStatusLowerName[273:285]: DeletionDone,
	_JobStatusName[285:298]:      RemovalFailed,
	_JobStatusLowerName[285:298]: RemovalFailed,
	_JobStatusName[298:312]:      DeletionFailed,
	_JobStatusLowerName[298:312]: DeletionFailed,
	_JobStatusName[312:327]:      CancelledByUser,
	_JobStatusLowerName[312:327]: CancelledByUser,
	_JobStatusName[327:348]:      CancelledByUserForced,
	_JobStatusLowerName[327:348]: CancelledByUserForced,
	_JobStatusName[348:366]:      CancellationFailed,
	_JobStatusLowerName[348:366]: CancellationFailed,
	_JobStatusName[366:382]:      CancellationDone,
	_JobStatusLowerName[366:382]: CancellationDone,
	_JobStatusName[382:396]:      RollbackFailed,
	_JobStatusLowerName[382:396]: RollbackFailed,
	_JobStatusName[396:408]:      RollbackDone,
	_JobStatusLowerName[396:408]: RollbackDone,
	_JobStatusName[408:415]:      Retried,
	_JobStatusLowerName[408:415]: Retried,
	_JobStatusName[415:426]:      RetryForced,
	_JobStatusLowerName[415:426]: RetryForced,
	_JobStatusName[426:434]:      Continue,
	_JobStatusLowerName[426:434]: Continue,
}

var _JobStatusNames = []string{
	_JobStatusName[0:10],
	_JobStatusName[10:24],
	_JobStatusName[24:43],
	_JobStatusName[43:59],
	_JobStatusName[59:76],
	_JobStatusName[76:95],
	_JobStatusName[95:119],
	_JobStatusName[119:139],
	_JobStatusName[139:166],
	_JobStatusName[166:181],
	_JobStatusName[181:199],
	_JobStatusName[199:214],
	_JobStatusName[214:233],
	_JobStatusName[233:246],
	_JobStatusName[246:262],
	_JobStatusName[262:273],
	_JobStatusName[273:285],
	_JobStatusName[285:298],
	_JobStatusName[298:312],
	_JobStatusName[312:327],
	_JobStatusName[327:348],
	_JobStatusName[348:366],
	_JobStatusName[366:382],
	_JobStatusName[382:396],
	_JobStatusName[396:408],
	_JobStatusName[408:415],
	_JobStatusName[415:426],
	_JobStatusName[426:434],
}

// JobStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func JobStatusString(s string) (JobStatus, error) {
	if val, ok := _JobStatusNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _JobStatusNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to JobStatus values", s)
}

// JobStatusValues returns all values of the enum
func JobStatusValues() []JobStatus {
	return _JobStatusValues
}

// JobStatusStrings returns a slice of all String values of the enum
func JobStatusStrings() []string {
	strs := make([]string, len(_JobStatusNames))
	copy(strs, _JobStatusNames)
	return strs
}

// IsAJobStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i JobStatus) IsAJobStatus() bool {
	for _, v := range _JobStatusValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for JobStatus
func (i JobStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for JobStatus
func (i *JobStatus) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("JobStatus should be a string, got %s", data)
	}

	var err error
	*i, err = JobStatusString(s)
	return err
}

func (i JobStatus) Value() (driver.Value, error) {
	return i.String(), nil
}

func (i *JobStatus) Scan(value interface{}) error {
	if value == nil {
		return nil
	}

	var str string
	switch v := value.(type) {
	case []byte:
		str = string(v)
	case string:
		str = v
	case fmt.Stringer:
		str = v.String()
	default:
		return fmt.Errorf("invalid value of JobStatus: %[1]T(%[1]v)", value)
	}

	val, err := JobStatusString(str)
	if err != nil {
		return err
	}

	*i = val
	return nil
}
